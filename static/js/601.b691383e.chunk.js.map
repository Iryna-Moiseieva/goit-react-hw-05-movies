{"version":3,"file":"static/js/601.b691383e.chunk.js","mappings":"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","sources":["components/AdditionalInfo/AdditionalInfo.styles.js","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.styles.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalInfoStyled = styled.div`\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  padding: 30px 15px;\n`;\n\nexport const Title = styled.h3`\n  font-size: var(--font-size-500);\n`;\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: var(--font-size-400);\n  color: var(--color-gray-300);\n  &:hover,\n  &:focus {\n    color: var(--color-blue-100);\n  }\n\n  &.active {\n    color: var(--color-blue-300);\n`;\n","import {\n  AdditionalInfoStyled,\n  Item,\n  List,\n  Title,\n  Link,\n} from './AdditionalInfo.styles';\n\nexport default function AdditionalInfo() {\n  return (\n    <AdditionalInfoStyled>\n      <Title>Additional information:</Title>\n      <List>\n        <Item>\n          <Link to=\"cast\">Cast</Link>\n        </Item>\n        <Item>\n          <Link to=\"reviews\">Reviews</Link>\n        </Item>\n      </List>\n    </AdditionalInfoStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MovieStyled = styled.div`\n  display: flex;\n  gap: 30px;\n  width: 100%;\n  padding: 30px 15px;\n`;\n\nexport const BackButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  min-width: 300px;\n  padding: 10px;\n\n  text-align: center;\n  text-decoration: none;\n  color: var(--color-white);\n  font-size: var(--font-size-200);\n  background-color: var(--color-blue-200);\n  border: 1px solid transparent;\n  border-radius: 8px;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-blue-100);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 240px;\n\n  box-shadow: 0 1px 4px black, -23px 0 20px -23px rgb(0 0 0 / 80%),\n    23px 0 20px -23px rgb(0 0 0 / 80%), 0 0 40px rgb(0 0 0 / 10%) inset;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: var(--font-size-300);\n  color: var(--color-black);\n  line-height: 1.15;\n  text-transform: uppercase;\n  margin-bottom: 15px;\n\n  &:first-child {\n    font-size: 30px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: var(--font-size-100);\n  color: var(--color-gray-200);\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport AdditionalInfo from 'components/AdditionalInfo';\nimport api from '../../services/moviesApi';\nimport {\n  MovieStyled,\n  BackButton,\n  Image,\n  Title,\n  Text,\n} from './MovieDetailsPage.styles.js';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n\n  const prevPage = useRef(location.state?.prevPath);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n\n        const response = await api.getMovieById(movieId);\n        setMovie({ ...response });\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const goBack = () => {\n    if (prevPage.current) {\n      navigate(prevPage.current);\n      return;\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <>\n      <BackButton type=\"button\" onClick={goBack}>\n        Go back\n      </BackButton>\n      {isLoading && <Loader />}\n      <MovieStyled>\n        <Image src={movie.src} alt={movie.title} />\n        <div>\n          <Title>{movie.title}</Title>\n          <Text>User Score: {movie.userScore}</Text>\n          <Title>Overview</Title>\n          <Text>{movie.overview}</Text>\n          <Title>Genres</Title>\n          <Text>{movie.genres}</Text>\n        </div>\n      </MovieStyled>\n      <AdditionalInfo />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\nimport defaultImage from '../images/defaultImage.jpg';\nimport noImageAvailable from '../images/noImageAvailable.jpg';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = '0a44406a328e0c9276ca96d909ee6267';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function getMoviesByTrend(config) {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesByQuery(query, config) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY_API}&query=${query}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error(`Sorry, no results were found for ${query}.`)\n    );\n  }\n\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMovieById(id, config) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedMovie(data);\n}\n\nasync function getMovieCast(id, config) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.cast.length) {\n    return Promise.reject(new Error('We don`t have any cast for this movie.'));\n  }\n  return normalizedCast(data.cast);\n}\n\nasync function getMovieReviews(id, config) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('We don`t have any reviews for this movie.')\n    );\n  }\n  return data.results;\n}\n\nfunction normalizedImgUrl(movies) {\n  return movies.map(movie => ({\n    ...movie,\n    poster_path: checkPosterPath(movie.poster_path),\n  }));\n}\n\nfunction normalizedMovie(movie) {\n  const genres = movie.genres.map(genre => genre.name).join(' ');\n\n  return {\n    title: movie.original_title,\n    overview: movie.overview,\n    userScore: `${movie.vote_average * 10}%`,\n    genres,\n    src: checkPosterPath(movie.poster_path),\n  };\n}\n\nfunction normalizedCast(cast) {\n  return cast.map(item => ({\n    id: item.cast_id,\n    name: item.name,\n    src: item.profile_path ? `${IMG_URL}${item.profile_path}` : defaultImage,\n    character: item.character,\n  }));\n}\n\nfunction checkPosterPath(path) {\n  return path ? `${IMG_URL}${path}` : noImageAvailable;\n}\n\nconst api = {\n  getMoviesByTrend,\n  getMoviesByQuery,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["AdditionalInfoStyled","styled","Title","List","Item","Link","NavLink","AdditionalInfo","to","MovieStyled","BackButton","Image","Text","MovieDetailsPage","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","movieId","useParams","slug","match","prevPage","useRef","state","prevPath","useEffect","getMovie","api","response","toast","message","type","onClick","current","Loader","src","alt","title","userScore","overview","genres","Suspense","fallback","BASE_URL","KEY_API","IMG_URL","getMoviesByTrend","config","url","axios","data","results","length","Promise","reject","Error","normalizedImgUrl","getMoviesByQuery","query","getMovieById","id","normalizedMovie","getMovieCast","cast","normalizedCast","getMovieReviews","movies","map","poster_path","checkPosterPath","genre","name","join","original_title","vote_average","item","cast_id","profile_path","defaultImage","character","path","noImageAvailable"],"sourceRoot":""}